CREATE SCHEMA IF NOT EXISTS crm;

create table crm.requests
(
    id    bigint generated by default as identity
        constraint pk_base_data
            primary key,
    guid_id          UUID   NOT NULL,
    user_id          bigint
        constraint fk_user_id
            references identity.users
            on delete restrict,
    name text not null,
    description not null,
    is_verified BOOLEAN not null default false,
    verified_change_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    verified_by_user_id  bigint
        constraint fk_user_verified_id
            references identity.users
            on delete restrict,
    verified_type varchar(15), -- auto, manual
    created_at           timestamp with time zone default now(),
    updated_at           timestamp with time zone default now(),
    city_id  bigint
        constraint fk_requests_city_id
            references references.geo_city
            on delete restrict,
    comment_to_moderator text, -- оставляет пользователь
    moderator_comment text -- для внутреннего использования
);

CREATE INDEX IF NOT EXISTS idx_requests_user_id ON crm.requests (user_id);
CREATE  INDEX IF NOT EXISTS idx_requests_created_at ON crm.requests (created_at );
CREATE UNIQUE INDEX IF NOT EXISTS idx_requests_guid_id ON crm.requests (guid_id );
CREATE INDEX IF NOT EXISTS idx_requests_city_id ON crm.requests (city_id);


CREATE TABLE IF NOT EXISTS crm.request_brands
(
    request_id bigint not null
        constraint fk_request_brands_request_id
        references crm.requests
         on delete restrict,
    brand_id bigint not null
        constraint fk_portfolio_brands_brand_id
        references products.brands
        on delete restrict,
    constraint pkrequest_brands primary key (request_id, brand_id)
);


CREATE TABLE IF NOT EXISTS profiles.request_sections
(
    request_id bigint not null
        constraint fk_request_sections_request_id
        references crm.requests
        on delete restrict,
    section_id bigint not null
        constraint fk_portfolio_sections_section_id
        references products.sections
        on delete restrict,
    constraint pk_request_sections primary key (request_id, section_id)
);

CREATE TABLE IF NOT EXISTS profiles.request_files
(
    file_id bigint not null
        constraint fk_request_files_file_id
        references files.files
        on delete restrict,
    request_id bigint not null
        constraint fk_request_files_request_id
        references crm.requests
        on delete restrict,
    constraint pk_portfolio_files  primary key (file_id, request_id)
    );


CREATE TABLE IF NOT EXISTS profiles.request_products
(
    request_id bigint not null
        constraint fk_request_files_request_id
        references crm.requests
        on delete restrict,
    product_id bigint not null
        constraint fk_portfolio_products_section_id
        references products.portfolio_products
        on delete restrict,
    constraint pk_portfolio_products primary key (request_id, product_id)
);

CREATE TABLE IF NOT EXISTS profiles.request_chats
(
    request_id bigint not null
        constraint fk_request_chats_request_id
        references crm.requests
        on delete restrict,
    chat_id bigint not null
        constraint fk_request_chats_section_id
        references chats.chats
        on delete restrict,
    constraint pk_request_chats primary key (request_id, chat_id)
);

