CREATE SCHEMA IF NOT EXISTS chats;

CREATE TABLE IF NOT EXISTS chats.chats
(
    id          bigint generated by default as identity
    constraint pk_chats
    PRIMARY KEY,
    guid_id     UUID NOT NULL,
    tg_bot_id   bigint,
    created_at  timestamp with time zone default now(),
    updated_at  timestamp with time zone default now(),
    is_disabled boolean                  default false
    );
create index if not exists idx_tg_bot_id on chats.chats (tg_bot_id);
CREATE INDEX IF NOT EXISTS idx_chats_guid_id ON chats.chats (guid_id);



CREATE TABLE IF NOT EXISTS chats.participants
(
    id               bigint generated by default as identity
    constraint pk_chats
    PRIMARY KEY,
    guid_id          UUID   NOT NULL,
    chat_id          bigint not null
    constraint fk_chat_id
    references chats.chats
    on delete restrict,
    user_id          bigint
    constraint fk_user_id
    references identity.users
    on delete restrict,
    tg_account_id    bigint
    constraint fk_tg_account_id
    references telegram.accounts
    on delete restrict,
    ios_install_id   bigint
    constraint fk_tg_account_id
    references telegram.accounts
    on delete restrict,
    web_anonymous_id bigint
    constraint fk_tg_account_id
    references telegram.accounts
    on delete restrict

);
CREATE INDEX IF NOT EXISTS idx_participants_guid_id ON chats.participants (guid_id);
CREATE INDEX IF NOT EXISTS idx_tg_account_id ON chats.participants (tg_account_id) WHERE tg_account_id NOT NULL;
CREATE INDEX IF NOT EXISTS idx_ios_account_id ON chats.participants (ios_install_id) WHERE ios_install_id NOT NULL;
CREATE INDEX IF NOT EXISTS idx_web_anonymous_id ON chats.participants (web_anonymous_id) WHERE web_anonymous_id NOT NULL;



CREATE TABLE IF NOT EXISTS chats.anonymous_user
(
    id      bigint generated by default as identity
    constraint pk_anonymous_user
    PRIMARY KEY,
    guid_id uuid not null,
    ip      inet

);
create index if not exists idx_sessions_guid_id on identity.anonymous_user (guid_id);




CREATE TABLE IF NOT EXISTS chats.messages
(
    id             bigint generated by default as identity
    constraint pk_message
    PRIMARY KEY,
    guid_id        uuid   not null,
    participant_id bigint not null
    constraint fk_participant_id
    references chats.participants
    on delete restrict,
    reply_id       bigint
    constraint fk_reply_id
    references chats.messages
    on delete restrict,
    data           text,
    created_at     timestamp with time zone default now(),
    updated_at     timestamp with time zone default now()
    );

create index if not exists idx_messages_guid_id on chats.messages (guid_id);
create index if not exists idx_participant_id on chats.messages (participant_id);



CREATE TABLE IF NOT EXISTS chats.files
(
    file_id bigint not null
        constraint fk_files_file_id
        references files.files
        on delete restrict,
    message_id bigint not null
        constraint fk_files_message_id
        references chats.messages
        on delete restrict,
    constraint pk_users_roles  primary key (file_id, message_id)
);
